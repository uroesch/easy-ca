#!/usr/bin/env bash
# Derek Moore <derek.moore@gmail.com>
# Tiago Possato <tiago.possato@yahoo.com.br>

# -----------------------------------------------------------------------------
# Setup
# -----------------------------------------------------------------------------
set -o errexit
set -o nounset
set -o pipefail

# -----------------------------------------------------------------------------
# Globals
# -----------------------------------------------------------------------------
declare -r SCRIPT=${0##*/}
declare    CN=
declare    CERT_NAME=
declare    SAFE_NAME=
declare    BIN_DIR=$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)
declare -x SAN=""
declare -x CA_PASS="${CA_PASS:-}"

# -----------------------------------------------------------------------------
# Functions
# -----------------------------------------------------------------------------
function usage() {
  local exit_code=${1:-1}
  cat <<USAGE

  Usage:
    ${SCRIPT} -c COMMON_NAME [-n CERT_NAME] [-h]

  Description:
    Issues a client or user certificate for CLIENT_NAME.

  Options:
    -h | --help                     This message
    -n | --name CERT_NAME  file name for the certifcate.
                           Default: COMMON_NAME
    -c | --cn COMMON_NAME  Client name (commonName) for the cert.

USAGE
  exit ${exit_code}
}

function parse_options() {
  while (( $# > 0 )); do
    case ${1} in
    -c|--cn)   shift; CN=${1};;
    -n|--name) shift; CERT_NAME=${1};;
    -h|--help) usage 0;;
    *)         usage 1;;
    esac
    shift
  done
}

function validate_options() {
  if [[ -z ${CN} ]]; then
    usage 1
  fi

  if [[ -z ${CERT_NAME} ]]; then
    CERT_NAME=${CN}
  fi
}

function source_files() {
  source ${BIN_DIR}/functions
  [[ -f "${BIN_DIR}/defaults.conf" ]] &&
    source ${BIN_DIR}/defaults.conf
}

function create_safe_name() {
  SAFE_NAME=$(to_safe_name "${CERT_NAME}")
}

function create_client_conf() {
  # Generate the client cert openssl config
  export CA_USERNAME=${CN}
  template "${BIN_DIR}/templates/client.tpl" "conf/${SAFE_NAME}.client.conf"
  if [[ -z ${SAN} ]]; then
    sed -i -e 's/^\(subjectAltName.*=.*\)/#\1/' \
      "conf/${SAFE_NAME}.client.conf"
  fi
}


# -----------------------------------------------------------------------------
# Main
# -----------------------------------------------------------------------------
parse_options "${@}"
validate_options
source_files
create_safe_name
message "Creating new client certificate for '${CN}' with:" \
  "CERT_NAME: '${CERT_NAME}'" \
  "CLIENT_NAME: '${CN}'"
pushd ${BIN_DIR}/.. > /dev/null
check_existing_configuration "${SAFE_NAME}" client
create_client_conf
ask_ca_passphrase 'signing'
create_csr "client" "${SAFE_NAME}"
sign_csr "client" "${SAFE_NAME}"
popd > /dev/null
message "Client certificate created."
